import type { User, MenuItem, Order, Table, OrderItem, Staff, InventoryItem, Customer, MemberRole, MemberShift, MemberPerformance, MemberNotification } from "./types"

export interface Branch {
  id: string
  name: string
  location: string
  manager: string
  phone: string
  openingHours: string
  totalRevenue: number
  monthlyRevenue: number
  staffCount: number
  activeStaff: number
  avgOrderValue: number
  ordersToday: number
  customerSatisfaction: number
}

export const mockBranches: Branch[] = [
  {
    id: "1",
    name: "Downtown Branch",
    location: "123 Main Street, Downtown",
    manager: "John Michael",
    phone: "+1-555-0101",
    openingHours: "8:00 AM - 11:00 PM",
    totalRevenue: 125000,
    monthlyRevenue: 45000,
    staffCount: 12,
    activeStaff: 8,
    avgOrderValue: 28.5,
    ordersToday: 156,
    customerSatisfaction: 4.8,
  },
  {
    id: "2",
    name: "Riverside Branch",
    location: "456 Oak Avenue, Riverside",
    manager: "Sarah Elizabeth",
    phone: "+1-555-0102",
    openingHours: "9:00 AM - 10:00 PM",
    totalRevenue: 98000,
    monthlyRevenue: 38000,
    staffCount: 10,
    activeStaff: 7,
    avgOrderValue: 24.75,
    ordersToday: 134,
    customerSatisfaction: 4.6,
  },
  {
    id: "3",
    name: "Hillside Branch",
    location: "789 Pine Road, Hillside",
    manager: "Michael Robert",
    phone: "+1-555-0103",
    openingHours: "10:00 AM - 12:00 AM",
    totalRevenue: 87500,
    monthlyRevenue: 32000,
    staffCount: 8,
    activeStaff: 6,
    avgOrderValue: 22.3,
    ordersToday: 98,
    customerSatisfaction: 4.4,
  },
  {
    id: "4",
    name: "Westside Branch",
    location: "321 Elm Street, Westside",
    manager: "Lisa Marie",
    phone: "+1-555-0104",
    openingHours: "11:00 AM - 11:00 PM",
    totalRevenue: 76000,
    monthlyRevenue: 28000,
    staffCount: 9,
    activeStaff: 5,
    avgOrderValue: 26.8,
    ordersToday: 87,
    customerSatisfaction: 4.5,
  },
]

export interface BranchStaff extends Staff {
  branchId: string
  branchName: string
}

export const mockBranchStaff: BranchStaff[] = [
  // Downtown Branch Staff
  {
    id: "1",
    name: "John Michael",
    fullName: "John Michael Manager",
    role: "Manager",
    status: "working",
    shiftStart: "08:00",
    shiftEnd: "18:00",
    avatar: "JM",
    nationalId: "NID-001-2024",
    address: "123 Main Street, Downtown, City 12345",
    contactNumber: "+1-555-0101",
    agreedSalary: 5000,
    advancedSalaryTaken: 1200,
    dateOfJoining: new Date("2023-01-15"),
    dailyHours: 10,
    entryTime: "08:00",
    exitTime: "18:00",
    efficiency: 95,
    hoursWorked: 10,
    // Added missing Staff properties
    email: "john.michael@downtown.com",
    emergencyContact: "Jane Michael",
    emergencyPhone: "+1-555-0101-ext",
    department: "management",
    position: "Branch Manager",
    permissions: ["manage-staff", "view-reports", "manage-inventory"],
    isActive: true,
    skills: ["Leadership", "Customer Service", "Inventory Management"],
    certifications: ["Food Safety Certificate", "Management Certification"],
    performanceScore: 95,
    attendanceRate: 98,
    totalOrdersHandled: 0,
    customerRating: 4.9,
    trainingCompleted: ["Food Safety", "Customer Service", "Management"],
    nextReviewDate: new Date("2025-01-15"),
    notes: "Excellent manager with 10+ years experience",
    branchId: "1",
    branchName: "Downtown Branch",
  },
  {
    id: "2",
    name: "Sarah Elizabeth",
    fullName: "Sarah Elizabeth Waiter",
    role: "Waiter",
    status: "working",
    shiftStart: "10:00",
    shiftEnd: "20:00",
    avatar: "SW",
    nationalId: "NID-002-2024",
    address: "456 Oak Avenue, Riverside, City 12346",
    contactNumber: "+1-555-0102",
    agreedSalary: 2800,
    advancedSalaryTaken: 500,
    dateOfJoining: new Date("2023-03-20"),
    dailyHours: 10,
    entryTime: "10:00",
    exitTime: "20:00",
    efficiency: 88,
    hoursWorked: 10,
    // Added missing Staff properties
    email: "sarah.elizabeth@downtown.com",
    emergencyContact: "Michael Elizabeth",
    emergencyPhone: "+1-555-0102-ext",
    department: "front-of-house",
    position: "Senior Waiter",
    managerId: "1",
    permissions: ["serve-tables", "take-orders", "handle-payments"],
    isActive: true,
    skills: ["Customer Service", "Order Taking", "Payment Processing"],
    certifications: ["Food Safety Certificate"],
    performanceScore: 88,
    attendanceRate: 95,
    totalOrdersHandled: 156,
    customerRating: 4.7,
    trainingCompleted: ["Food Safety", "Customer Service", "POS System"],
    nextReviewDate: new Date("2025-03-20"),
    notes: "Reliable and friendly staff member",
    branchId: "1",
    branchName: "Downtown Branch",
  },
  {
    id: "3",
    name: "Michael Robert",
    fullName: "Michael Robert Chef",
    role: "Chef",
    status: "working",
    shiftStart: "09:00",
    shiftEnd: "21:00",
    avatar: "MC",
    nationalId: "NID-003-2024",
    address: "789 Pine Road, Hillside, City 12347",
    contactNumber: "+1-555-0103",
    agreedSalary: 4200,
    advancedSalaryTaken: 800,
    dateOfJoining: new Date("2022-11-10"),
    dailyHours: 12,
    entryTime: "09:00",
    exitTime: "21:00",
    efficiency: 92,
    hoursWorked: 12,
    // Added missing Staff properties
    email: "michael.robert@downtown.com",
    emergencyContact: "Lisa Robert",
    emergencyPhone: "+1-555-0103-ext",
    department: "kitchen",
    position: "Head Chef",
    managerId: "1",
    permissions: ["prepare-food", "manage-kitchen", "order-supplies"],
    isActive: true,
    skills: ["Culinary Arts", "Kitchen Management", "Food Safety"],
    certifications: ["Food Safety Certificate", "Culinary Certification"],
    performanceScore: 92,
    attendanceRate: 97,
    totalOrdersHandled: 0,
    customerRating: 4.8,
    trainingCompleted: ["Food Safety", "Culinary Arts", "Kitchen Management"],
    nextReviewDate: new Date("2025-11-10"),
    notes: "Expert chef with creative menu ideas",
    branchId: "1",
    branchName: "Downtown Branch",
  },
  // Riverside Branch Staff
  {
    id: "7",
    name: "David Wilson",
    fullName: "David Wilson Manager",
    role: "Manager",
    status: "working",
    shiftStart: "09:00",
    shiftEnd: "19:00",
    avatar: "DW",
    nationalId: "NID-007-2024",
    address: "111 River Road, Riverside, City 12351",
    contactNumber: "+1-555-0107",
    agreedSalary: 4800,
    advancedSalaryTaken: 1000,
    dateOfJoining: new Date("2023-02-01"),
    dailyHours: 10,
    entryTime: "09:00",
    exitTime: "19:00",
    efficiency: 93,
    hoursWorked: 10,
    // Added missing Staff properties
    email: "david.wilson@riverside.com",
    emergencyContact: "Sarah Wilson",
    emergencyPhone: "+1-555-0107-ext",
    department: "management",
    position: "Branch Manager",
    permissions: ["manage-staff", "view-reports", "manage-inventory"],
    isActive: true,
    skills: ["Leadership", "Customer Service", "Inventory Management"],
    certifications: ["Food Safety Certificate", "Management Certification"],
    performanceScore: 93,
    attendanceRate: 96,
    totalOrdersHandled: 0,
    customerRating: 4.8,
    trainingCompleted: ["Food Safety", "Customer Service", "Management"],
    nextReviewDate: new Date("2025-02-01"),
    notes: "Strong leadership skills and operational expertise",
    branchId: "2",
    branchName: "Riverside Branch",
  },
  {
    id: "8",
    name: "Anna Taylor",
    fullName: "Anna Taylor Chef",
    role: "Chef",
    status: "working",
    shiftStart: "10:00",
    shiftEnd: "22:00",
    avatar: "AT",
    nationalId: "NID-008-2024",
    address: "222 Stream Lane, Riverside, City 12352",
    contactNumber: "+1-555-0108",
    agreedSalary: 4000,
    advancedSalaryTaken: 700,
    dateOfJoining: new Date("2023-04-15"),
    dailyHours: 12,
    entryTime: "10:00",
    exitTime: "22:00",
    efficiency: 89,
    hoursWorked: 12,
    // Added missing Staff properties
    email: "anna.taylor@riverside.com",
    emergencyContact: "James Taylor",
    emergencyPhone: "+1-555-0108-ext",
    department: "kitchen",
    position: "Sous Chef",
    managerId: "7",
    permissions: ["prepare-food", "manage-kitchen", "order-supplies"],
    isActive: true,
    skills: ["Culinary Arts", "Kitchen Management", "Food Safety"],
    certifications: ["Food Safety Certificate", "Culinary Certification"],
    performanceScore: 89,
    attendanceRate: 94,
    totalOrdersHandled: 0,
    customerRating: 4.7,
    trainingCompleted: ["Food Safety", "Culinary Arts", "Kitchen Management"],
    nextReviewDate: new Date("2025-04-15"),
    notes: "Creative and efficient kitchen staff",
    branchId: "2",
    branchName: "Riverside Branch",
  },
  // Hillside Branch Staff
  {
    id: "9",
    name: "Robert Brown",
    fullName: "Robert Brown Manager",
    role: "Manager",
    status: "absent",
    shiftStart: "10:00",
    shiftEnd: "20:00",
    avatar: "RB",
    nationalId: "NID-009-2024",
    address: "333 Hill Avenue, Hillside, City 12353",
    contactNumber: "+1-555-0109",
    agreedSalary: 4600,
    advancedSalaryTaken: 900,
    dateOfJoining: new Date("2023-01-20"),
    dailyHours: 0,
    entryTime: "N/A",
    exitTime: "N/A",
    efficiency: 0,
    hoursWorked: 0,
    // Added missing Staff properties
    email: "robert.brown@hillside.com",
    emergencyContact: "Maria Brown",
    emergencyPhone: "+1-555-0109-ext",
    department: "management",
    position: "Branch Manager",
    permissions: ["manage-staff", "view-reports", "manage-inventory"],
    isActive: true,
    skills: ["Leadership", "Customer Service", "Inventory Management"],
    certifications: ["Food Safety Certificate", "Management Certification"],
    performanceScore: 91,
    attendanceRate: 92,
    totalOrdersHandled: 0,
    customerRating: 4.6,
    trainingCompleted: ["Food Safety", "Customer Service", "Management"],
    nextReviewDate: new Date("2025-01-20"),
    notes: "Currently on sick leave",
    branchId: "3",
    branchName: "Hillside Branch",
  },
  // Westside Branch Staff
  {
    id: "10",
    name: "Jennifer Davis",
    fullName: "Jennifer Davis Manager",
    role: "Manager",
    status: "working",
    shiftStart: "11:00",
    shiftEnd: "21:00",
    avatar: "JD",
    nationalId: "NID-010-2024",
    address: "444 West Street, Westside, City 12354",
    contactNumber: "+1-555-0110",
    agreedSalary: 4400,
    advancedSalaryTaken: 800,
    dateOfJoining: new Date("2023-03-10"),
    dailyHours: 10,
    entryTime: "11:00",
    exitTime: "21:00",
    efficiency: 91,
    hoursWorked: 10,
    // Added missing Staff properties
    email: "jennifer.davis@westside.com",
    emergencyContact: "Thomas Davis",
    emergencyPhone: "+1-555-0110-ext",
    department: "management",
    position: "Branch Manager",
    permissions: ["manage-staff", "view-reports", "manage-inventory"],
    isActive: true,
    skills: ["Leadership", "Customer Service", "Inventory Management"],
    certifications: ["Food Safety Certificate", "Management Certification"],
    performanceScore: 91,
    attendanceRate: 95,
    totalOrdersHandled: 0,
    customerRating: 4.7,
    trainingCompleted: ["Food Safety", "Customer Service", "Management"],
    nextReviewDate: new Date("2025-03-10"),
    notes: "Newly promoted manager with strong potential",
    branchId: "4",
    branchName: "Westside Branch",
  },
]

export const mockUsers: User[] = [
  {
    id: "1",
    name: "John Michael",
    email: "john@restaurant.com",
    role: "manager",
    createdAt: new Date("2024-01-01"),
  },
  {
    id: "2",
    name: "Sarah Elizabeth",
    email: "sarah@restaurant.com",
    role: "waiter",
    createdAt: new Date("2024-01-01"),
  },
  {
    id: "3",
    name: "Michael Robert",
    email: "mike@restaurant.com",
    role: "kitchen",
    createdAt: new Date("2024-01-01"),
  },
  // Additional waiters so selection lists are meaningful
  {
    id: "4",
    name: "Noah Patel",
    email: "noah.patel@restaurant.com",
    role: "waiter",
    createdAt: new Date("2024-06-10"),
  },
  {
    id: "5",
    name: "Emma Grace",
    email: "emma.grace@restaurant.com",
    role: "waiter",
    createdAt: new Date("2024-07-05"),
  },
]

export const mockStaff: Staff[] = [
  {
    id: "4",
    name: "Lisa Marie",
    fullName: "Lisa Marie Server",
    role: "Waiter",
    status: "absent",
    shiftStart: "11:00",
    shiftEnd: "19:00",
    avatar: "LS",
    nationalId: "NID-004-2024",
    address: "321 Elm Street, Westside, City 12348",
    contactNumber: "+1-555-0104",
    agreedSalary: 2600,
    advancedSalaryTaken: 300,
    dateOfJoining: new Date("2023-06-05"),
    dailyHours: 0,
    entryTime: "N/A",
    exitTime: "N/A",
    efficiency: 0,
    hoursWorked: 0,
    // Enhanced member features
    email: "lisa.marie@restaurant.com",
    emergencyContact: "John Marie",
    emergencyPhone: "+1-555-0104-emergency",
    department: "front-of-house",
    position: "Senior Server",
    managerId: "1",
    permissions: ["view_orders", "update_orders", "view_tables", "customer_service"],
    lastLogin: new Date("2024-09-13T08:30:00"),
    isActive: true,
    profileImage: "/avatars/lisa-marie.jpg",
    bio: "Experienced server with 5+ years in fine dining. Specializes in wine service and customer relations.",
    skills: ["Wine Service", "Customer Relations", "Upselling", "Table Management"],
    certifications: ["ServSafe Food Handler", "Wine Service Certification", "Customer Service Excellence"],
    performanceScore: 4.2,
    attendanceRate: 95,
    totalOrdersHandled: 1247,
    customerRating: 4.6,
    trainingCompleted: ["Food Safety", "Wine Service", "Customer Service", "POS System"],
    nextReviewDate: new Date("2024-12-15"),
    notes: "Excellent customer service skills, potential for promotion to shift supervisor.",
  },
  {
    id: "5",
    name: "Thomas James",
    fullName: "Thomas James Bartender",
    role: "Bartender",
    status: "working",
    shiftStart: "16:00",
    shiftEnd: "24:00",
    avatar: "TB",
    nationalId: "NID-005-2024",
    address: "654 Maple Drive, Eastside, City 12349",
    contactNumber: "+1-555-0105",
    agreedSalary: 3200,
    advancedSalaryTaken: 600,
    dateOfJoining: new Date("2023-02-14"),
    dailyHours: 8,
    entryTime: "16:00",
    exitTime: "24:00",
    efficiency: 90,
    hoursWorked: 8,
    // Enhanced member features
    email: "thomas.james@restaurant.com",
    emergencyContact: "Sarah James",
    emergencyPhone: "+1-555-0105-emergency",
    department: "front-of-house",
    position: "Head Bartender",
    managerId: "1",
    permissions: ["view_orders", "update_orders", "manage_bar", "inventory_access"],
    lastLogin: new Date("2024-09-13T15:45:00"),
    isActive: true,
    profileImage: "/avatars/thomas-james.jpg",
    bio: "Creative mixologist with expertise in craft cocktails and bar management. 8+ years experience.",
    skills: ["Mixology", "Bar Management", "Inventory Control", "Customer Service", "Cocktail Creation"],
    certifications: ["TIPS Alcohol Service", "Advanced Mixology", "Bar Management", "Food Safety"],
    performanceScore: 4.7,
    attendanceRate: 98,
    totalOrdersHandled: 2156,
    customerRating: 4.8,
    trainingCompleted: ["Alcohol Service", "Mixology", "Bar Management", "Inventory Control"],
    nextReviewDate: new Date("2024-11-20"),
    notes: "Outstanding bartender, consistently receives positive customer feedback. Ready for management role.",
  },
  {
    id: "6",
    name: "Emma Grace",
    fullName: "Emma Grace Host",
    role: "Host",
    status: "absent",
    shiftStart: "17:00",
    shiftEnd: "23:00",
    avatar: "EH",
    nationalId: "NID-006-2024",
    address: "987 Cedar Lane, Northside, City 12350",
    contactNumber: "+1-555-0106",
    agreedSalary: 2400,
    advancedSalaryTaken: 200,
    dateOfJoining: new Date("2023-08-12"),
    dailyHours: 0,
    entryTime: "N/A",
    exitTime: "N/A",
    efficiency: 0,
    hoursWorked: 0,
    // Enhanced member features
    email: "emma.grace@restaurant.com",
    emergencyContact: "Michael Grace",
    emergencyPhone: "+1-555-0106-emergency",
    department: "front-of-house",
    position: "Hostess",
    managerId: "1",
    permissions: ["view_tables", "manage_reservations", "customer_service"],
    lastLogin: new Date("2024-09-12T16:20:00"),
    isActive: true,
    profileImage: "/avatars/emma-grace.jpg",
    bio: "Friendly and organized hostess with excellent communication skills and attention to detail.",
    skills: ["Reservation Management", "Customer Greeting", "Table Coordination", "Phone Etiquette"],
    certifications: ["Customer Service Excellence", "Reservation Management"],
    performanceScore: 4.0,
    attendanceRate: 92,
    totalOrdersHandled: 0,
    customerRating: 4.4,
    trainingCompleted: ["Customer Service", "Reservation System", "Phone Etiquette"],
    nextReviewDate: new Date("2025-01-10"),
    notes: "Reliable team member, good with customers. Working on improving punctuality.",
  },
  {
    id: "11",
    name: "Alex Johnson",
    fullName: "Alex Johnson General Manager",
    role: "Manager",
    status: "working",
    shiftStart: "09:00",
    shiftEnd: "19:00",
    avatar: "AJ",
    nationalId: "NID-011-2024",
    address: "100 Market Street, Downtown, City 12355",
    contactNumber: "+1-555-0111",
    agreedSalary: 5200,
    advancedSalaryTaken: 600,
    dateOfJoining: new Date("2022-09-01"),
    dailyHours: 10,
    entryTime: "09:00",
    exitTime: "19:00",
    efficiency: 96,
    hoursWorked: 10,
    // Enhanced member features
    email: "alex.johnson@restaurant.com",
    emergencyContact: "Megan Johnson",
    emergencyPhone: "+1-555-0111-emergency",
    department: "management",
    position: "General Manager",
    managerId: undefined,
    permissions: ["all"],
    lastLogin: new Date(),
    isActive: true,
    profileImage: "/avatars/alex-johnson.jpg",
    bio: "Seasoned GM with 10+ years in hospitality, focused on operations and guest experience.",
    skills: ["Leadership", "Operations", "Financial Planning", "Team Coaching"],
    certifications: ["ServSafe Manager", "Leadership Excellence"],
    performanceScore: 4.8,
    attendanceRate: 99,
    totalOrdersHandled: 0,
    customerRating: 4.9,
    trainingCompleted: ["Food Safety", "Workplace Safety", "Diversity & Inclusion"],
    nextReviewDate: new Date("2025-03-01"),
    notes: "Drives KPIs and team morale; mentors supervisors.",
  },
  {
    id: "12",
    name: "Noah Patel",
    fullName: "Noah Patel Server",
    role: "Waiter",
    status: "working",
    shiftStart: "12:00",
    shiftEnd: "20:00",
    avatar: "NP",
    nationalId: "NID-012-2024",
    address: "55 River Walk, Riverside, City 12356",
    contactNumber: "+1-555-0112",
    agreedSalary: 2700,
    advancedSalaryTaken: 200,
    dateOfJoining: new Date("2024-05-10"),
    dailyHours: 8,
    entryTime: "12:00",
    exitTime: "20:00",
    efficiency: 91,
    hoursWorked: 8,
    // Enhanced member features
    email: "noah.patel@restaurant.com",
    emergencyContact: "Ravi Patel",
    emergencyPhone: "+1-555-0112-emergency",
    department: "front-of-house",
    position: "Server",
    managerId: "11",
    permissions: ["view_orders", "update_orders", "view_tables", "customer_service"],
    lastLogin: new Date(),
    isActive: true,
    profileImage: "/avatars/noah-patel.jpg",
    bio: "Friendly server known for upselling specials and quick table turns.",
    skills: ["POS", "Upselling", "Customer Service"],
    certifications: ["ServSafe Food Handler"],
    performanceScore: 4.4,
    attendanceRate: 96,
    totalOrdersHandled: 420,
    customerRating: 4.7,
    trainingCompleted: ["POS System", "Customer Service"],
    nextReviewDate: new Date("2025-02-01"),
    notes: "Great with families and large parties.",
  },
]

export const mockMenuItems: MenuItem[] = [
  {
    id: "1",
    name: "Caesar Salad",
    description: "Fresh romaine lettuce with parmesan cheese and croutons",
    price: 12.99,
    category: "appetizer",
    available: true,
    preparationTime: 10,
  },
  {
    id: "2",
    name: "Grilled Salmon",
    description: "Atlantic salmon with lemon herb butter and seasonal vegetables",
    price: 24.99,
    category: "main",
    available: true,
    preparationTime: 20,
  },
  {
    id: "3",
    name: "Chocolate Cake",
    description: "Rich chocolate cake with vanilla ice cream",
    price: 8.99,
    category: "dessert",
    available: true,
    preparationTime: 5,
  },
  {
    id: "4",
    name: "House Wine",
    description: "Red or white wine selection",
    price: 7.99,
    category: "beverage",
    available: true,
    preparationTime: 2,
  },
  {
    id: "5",
    name: "Buffalo Wings",
    description: "Crispy chicken wings with spicy buffalo sauce and blue cheese dip",
    price: 14.99,
    category: "appetizer",
    available: true,
    preparationTime: 15,
  },
  {
    id: "6",
    name: "Bruschetta",
    description: "Toasted bread with fresh tomatoes, basil, and mozzarella",
    price: 9.99,
    category: "appetizer",
    available: true,
    preparationTime: 8,
  },
  {
    id: "7",
    name: "Calamari Rings",
    description: "Golden fried squid rings with marinara sauce",
    price: 13.99,
    category: "appetizer",
    available: true,
    preparationTime: 12,
  },
  {
    id: "8",
    name: "Ribeye Steak",
    description: "12oz prime ribeye with garlic mashed potatoes and asparagus",
    price: 32.99,
    category: "main",
    available: true,
    preparationTime: 25,
  },
  {
    id: "9",
    name: "Chicken Parmesan",
    description: "Breaded chicken breast with marinara sauce and melted mozzarella",
    price: 19.99,
    category: "main",
    available: true,
    preparationTime: 18,
  },
  {
    id: "10",
    name: "Vegetarian Pasta",
    description: "Penne pasta with roasted vegetables in olive oil and herbs",
    price: 16.99,
    category: "main",
    available: true,
    preparationTime: 15,
  },
  {
    id: "11",
    name: "Fish Tacos",
    description: "Three soft tacos with grilled fish, cabbage slaw, and lime crema",
    price: 17.99,
    category: "main",
    available: true,
    preparationTime: 16,
  },
  {
    id: "12",
    name: "BBQ Ribs",
    description: "Half rack of baby back ribs with coleslaw and fries",
    price: 26.99,
    category: "main",
    available: true,
    preparationTime: 30,
  },
  {
    id: "13",
    name: "Tiramisu",
    description: "Classic Italian dessert with coffee-soaked ladyfingers and mascarpone",
    price: 9.99,
    category: "dessert",
    available: true,
    preparationTime: 3,
  },
  {
    id: "14",
    name: "Crème Brûlée",
    description: "Vanilla custard with caramelized sugar crust",
    price: 8.99,
    category: "dessert",
    available: true,
    preparationTime: 5,
  },
  {
    id: "15",
    name: "Apple Pie",
    description: "Homemade apple pie with cinnamon and vanilla ice cream",
    price: 7.99,
    category: "dessert",
    available: true,
    preparationTime: 4,
  },
  {
    id: "16",
    name: "Craft Beer",
    description: "Local IPA or Lager selection",
    price: 6.99,
    category: "beverage",
    available: true,
    preparationTime: 1,
  },
  {
    id: "17",
    name: "Fresh Lemonade",
    description: "House-made lemonade with fresh lemons",
    price: 4.99,
    category: "beverage",
    available: true,
    preparationTime: 2,
  },
  {
    id: "18",
    name: "Espresso",
    description: "Double shot of premium espresso",
    price: 3.99,
    category: "beverage",
    available: true,
    preparationTime: 3,
  },
  {
    id: "19",
    name: "Cocktail Special",
    description: "Chef's signature cocktail of the day",
    price: 12.99,
    category: "beverage",
    available: true,
    preparationTime: 5,
  },
]

export const mockTables: Table[] = [
  { id: "1", number: 1, capacity: 2, status: "available" },
  { id: "2", number: 2, capacity: 4, status: "occupied", currentOrderId: "1" },
  { id: "3", number: 3, capacity: 6, status: "available" },
  { id: "4", number: 4, capacity: 2, status: "reserved" },
  { id: "5", number: 5, capacity: 4, status: "cleaning" },
  { id: "6", number: 6, capacity: 8, status: "available" },
  { id: "7", number: 7, capacity: 2, status: "occupied", currentOrderId: "5" },
  { id: "8", number: 8, capacity: 4, status: "available" },
  { id: "9", number: 9, capacity: 6, status: "reserved" },
  { id: "10", number: 10, capacity: 2, status: "available" },
  { id: "11", number: 11, capacity: 4, status: "cleaning" },
  { id: "12", number: 12, capacity: 8, status: "available" },
  { id: "13", number: 13, capacity: 2, status: "occupied", currentOrderId: "2" },
  { id: "14", number: 14, capacity: 6, status: "available" },
  { id: "15", number: 15, capacity: 4, status: "reserved" },
  { id: "16", number: 16, capacity: 10, status: "available" },
  { id: "17", number: 17, capacity: 2, status: "available" },
  { id: "18", number: 18, capacity: 4, status: "cleaning" },
  { id: "19", number: 19, capacity: 6, status: "available" },
  { id: "20", number: 20, capacity: 8, status: "available" },
]

export const mockOrderItems: OrderItem[] = [
  {
    id: "1",
    menuItemId: "1",
    quantity: 2,
    price: 25.98,
  },
  {
    id: "2",
    menuItemId: "2",
    quantity: 1,
    price: 24.99,
    specialInstructions: "No vegetables please",
  },
  {
    id: "3",
    menuItemId: "5",
    quantity: 1,
    price: 14.99,
    specialInstructions: "Extra spicy",
  },
  {
    id: "4",
    menuItemId: "8",
    quantity: 2,
    price: 65.98,
    specialInstructions: "Medium rare",
  },
  {
    id: "5",
    menuItemId: "16",
    quantity: 2,
    price: 13.98,
  },
  {
    id: "6",
    menuItemId: "10",
    quantity: 1,
    price: 16.99,
    specialInstructions: "Extra cheese",
  },
  {
    id: "7",
    menuItemId: "13",
    quantity: 1,
    price: 9.99,
  },
  {
    id: "8",
    menuItemId: "11",
    quantity: 3,
    price: 53.97,
    specialInstructions: "No cilantro",
  },
  {
    id: "9",
    menuItemId: "17",
    quantity: 1,
    price: 9.98,
  },
]

export const mockOrders: Order[] = [
  {
    id: "1",
    tableNumber: 2,
    waiterId: "2",
    items: [mockOrderItems[0], mockOrderItems[1]],
    status: "preparing",
    totalAmount: 50.97,
    createdAt: new Date(Date.now() - 30 * 60 * 1000), // 30 minutes ago
    updatedAt: new Date(Date.now() - 10 * 60 * 1000), // 10 minutes ago
    estimatedReadyTime: new Date(Date.now() + 10 * 60 * 1000), // 10 minutes from now
    notes: "Customer has nut allergy",
  },
  {
    id: "2",
    tableNumber: 4,
    waiterId: "2",
    items: [mockOrderItems[2], mockOrderItems[4]],
    status: "pending",
    totalAmount: 28.97,
    createdAt: new Date(Date.now() - 5 * 60 * 1000), // 5 minutes ago
    updatedAt: new Date(Date.now() - 5 * 60 * 1000),
    estimatedReadyTime: new Date(Date.now() + 20 * 60 * 1000), // 20 minutes from now
    notes: "Rush order for business meeting",
  },
  {
    id: "3",
    tableNumber: 1,
    waiterId: "2",
    items: [mockOrderItems[3], mockOrderItems[6]],
    status: "ready",
    totalAmount: 75.97,
    createdAt: new Date(Date.now() - 45 * 60 * 1000), // 45 minutes ago
    updatedAt: new Date(Date.now() - 2 * 60 * 1000), // 2 minutes ago
    estimatedReadyTime: new Date(Date.now() - 2 * 60 * 1000), // Ready 2 minutes ago
    notes: "Anniversary dinner - complimentary dessert",
  },
  {
    id: "4",
    tableNumber: 3,
    waiterId: "2",
    items: [mockOrderItems[5], mockOrderItems[8]],
    status: "served",
    totalAmount: 26.97,
    createdAt: new Date(Date.now() - 60 * 60 * 1000), // 1 hour ago
    updatedAt: new Date(Date.now() - 30 * 60 * 1000), // 30 minutes ago
    estimatedReadyTime: new Date(Date.now() - 45 * 60 * 1000),
    notes: "Vegetarian customer",
  },
  {
    id: "5",
    tableNumber: 6,
    waiterId: "2",
    items: [mockOrderItems[7]],
    status: "preparing",
    totalAmount: 53.97,
    createdAt: new Date(Date.now() - 15 * 60 * 1000), // 15 minutes ago
    updatedAt: new Date(Date.now() - 8 * 60 * 1000), // 8 minutes ago
    estimatedReadyTime: new Date(Date.now() + 8 * 60 * 1000), // 8 minutes from now
    notes: "Large family order",
  },
]

// Additional sample completed/cancelled orders for history view
mockOrders.push(
  {
    id: "6",
    tableNumber: 8,
    waiterId: "2",
    items: [mockOrderItems[0], mockOrderItems[4]],
    status: "served",
    totalAmount: 39.96,
    createdAt: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000),
    updatedAt: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000 + 40 * 60 * 1000),
    estimatedReadyTime: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000 + 30 * 60 * 1000),
    notes: "Lunch special",
  },
  {
    id: "7",
    tableNumber: 12,
    waiterId: "2",
    items: [mockOrderItems[3]],
    status: "cancelled",
    totalAmount: 75.97,
    createdAt: new Date(Date.now() - 3 * 24 * 60 * 60 * 1000),
    updatedAt: new Date(Date.now() - 3 * 24 * 60 * 60 * 1000 + 15 * 60 * 1000),
    estimatedReadyTime: new Date(Date.now() - 3 * 24 * 60 * 60 * 1000 + 35 * 60 * 1000),
    notes: "Customer no-show",
  },
  {
    id: "8",
    tableNumber: 10,
    waiterId: "2",
    items: [mockOrderItems[6], mockOrderItems[8]],
    status: "served",
    totalAmount: 37.96,
    createdAt: new Date(Date.now() - 6 * 24 * 60 * 60 * 1000),
    updatedAt: new Date(Date.now() - 6 * 24 * 60 * 60 * 1000 + 50 * 60 * 1000),
    estimatedReadyTime: new Date(Date.now() - 6 * 24 * 60 * 60 * 1000 + 25 * 60 * 1000),
    notes: "Birthday table",
  },
  {
    id: "9",
    tableNumber: 5,
    waiterId: "2",
    items: [mockOrderItems[1], mockOrderItems[2]],
    status: "served",
    totalAmount: 39.98,
    createdAt: new Date(Date.now() - 9 * 24 * 60 * 60 * 1000),
    updatedAt: new Date(Date.now() - 9 * 24 * 60 * 60 * 1000 + 35 * 60 * 1000),
    estimatedReadyTime: new Date(Date.now() - 9 * 24 * 60 * 60 * 1000 + 20 * 60 * 1000),
    notes: "Outdoor seating",
  },
  {
    id: "10",
    tableNumber: 14,
    waiterId: "2",
    items: [mockOrderItems[5]],
    status: "cancelled",
    totalAmount: 16.99,
    createdAt: new Date(Date.now() - 12 * 24 * 60 * 60 * 1000),
    updatedAt: new Date(Date.now() - 12 * 24 * 60 * 60 * 1000 + 10 * 60 * 1000),
    estimatedReadyTime: new Date(Date.now() - 12 * 24 * 60 * 60 * 1000 + 30 * 60 * 1000),
    notes: "Kitchen issue",
  }
)

export const addOrder = (order: Order) => {
  mockOrders.push(order)
}

export const updateOrder = (updatedOrder: Order) => {
  const index = mockOrders.findIndex((order) => order.id === updatedOrder.id)
  if (index !== -1) {
    mockOrders[index] = updatedOrder
  }
}

export const cancelOrder = (orderId: string) => {
  const index = mockOrders.findIndex((order) => order.id === orderId)
  if (index !== -1) {
    mockOrders[index].status = "cancelled"
    mockOrders[index].updatedAt = new Date()
  }
}

export const getNextOrderId = () => {
  const maxId = Math.max(...mockOrders.map((order) => Number.parseInt(order.id)), 0)
  return (maxId + 1).toString()
}

export const addMenuItem = (menuItem: MenuItem) => {
  mockMenuItems.push(menuItem)
}

export const updateMenuItem = (updatedMenuItem: MenuItem) => {
  const index = mockMenuItems.findIndex((item) => item.id === updatedMenuItem.id)
  if (index !== -1) {
    mockMenuItems[index] = updatedMenuItem
  }
}

export const deleteMenuItem = (menuItemId: string) => {
  const index = mockMenuItems.findIndex((item) => item.id === menuItemId)
  if (index !== -1) {
    mockMenuItems.splice(index, 1)
  }
}

export const toggleMenuItemAvailability = (menuItemId: string) => {
  const index = mockMenuItems.findIndex((item) => item.id === menuItemId)
  if (index !== -1) {
    mockMenuItems[index].available = !mockMenuItems[index].available
  }
}

export const getNextMenuItemId = () => {
  const maxId = Math.max(...mockMenuItems.map((item) => Number.parseInt(item.id)), 0)
  return (maxId + 1).toString()
}

export const mockInventoryItems: InventoryItem[] = [
  {
    id: "1",
    name: "Salmon Fillet",
    category: "protein",
    currentStock: 3,
    maxStock: 50,
    unit: "portions",
    costPerUnit: 12.5,
    totalValue: 37.5,
    supplier: "Ocean Fresh Seafood",
    lastRestocked: new Date("2024-09-12"),
    expiresAt: new Date("2024-09-15"),
    lowStockThreshold: 10,
  },
  {
    id: "2",
    name: "Organic Tomatoes",
    category: "vegetables",
    currentStock: 25,
    maxStock: 100,
    unit: "lbs",
    costPerUnit: 3.25,
    totalValue: 81.25,
    supplier: "Green Valley Farms",
    lastRestocked: new Date("2024-09-13"),
    expiresAt: new Date("2024-09-17"),
    lowStockThreshold: 20,
  },
  {
    id: "3",
    name: "Mozzarella Cheese",
    category: "dairy",
    currentStock: 0,
    maxStock: 20,
    unit: "lbs",
    costPerUnit: 8.75,
    totalValue: 0,
    supplier: "Dairy Best Co.",
    lastRestocked: new Date("2024-09-09"),
    expiresAt: new Date("2024-09-20"),
    lowStockThreshold: 5,
  },
  {
    id: "4",
    name: "Olive Oil",
    category: "condiments",
    currentStock: 8,
    maxStock: 15,
    unit: "bottles",
    costPerUnit: 15.0,
    totalValue: 120.0,
    supplier: "Mediterranean Imports",
    lastRestocked: new Date("2024-09-10"),
    expiresAt: new Date("2025-09-10"),
    lowStockThreshold: 3,
  },
  {
    id: "5",
    name: "Beef Tenderloin",
    category: "protein",
    currentStock: 12,
    maxStock: 30,
    unit: "lbs",
    costPerUnit: 24.0,
    totalValue: 288.0,
    supplier: "Prime Cuts Butchery",
    lastRestocked: new Date("2024-09-11"),
    expiresAt: new Date("2024-09-18"),
    lowStockThreshold: 8,
  },
  {
    id: "6",
    name: "Fresh Basil",
    category: "vegetables",
    currentStock: 15,
    maxStock: 25,
    unit: "bunches",
    costPerUnit: 2.5,
    totalValue: 37.5,
    supplier: "Herb Garden Co.",
    lastRestocked: new Date("2024-09-13"),
    expiresAt: new Date("2024-09-16"),
    lowStockThreshold: 5,
  },
  {
    id: "7",
    name: "Rice Flour",
    category: "grains",
    currentStock: 40,
    maxStock: 50,
    unit: "lbs",
    costPerUnit: 1.8,
    totalValue: 72.0,
    supplier: "Grain Masters",
    lastRestocked: new Date("2024-09-08"),
    expiresAt: new Date("2025-03-08"),
    lowStockThreshold: 10,
  },
  {
    id: "8",
    name: "Sparkling Water",
    category: "beverages",
    currentStock: 24,
    maxStock: 48,
    unit: "bottles",
    costPerUnit: 1.2,
    totalValue: 28.8,
    supplier: "Pure Water Co.",
    lastRestocked: new Date("2024-09-12"),
    expiresAt: new Date("2025-09-12"),
    lowStockThreshold: 12,
  },
  {
    id: "9",
    name: "Sea Salt",
    category: "condiments",
    currentStock: 6,
    maxStock: 10,
    unit: "lbs",
    costPerUnit: 4.5,
    totalValue: 27.0,
    supplier: "Salt & Spice Co.",
    lastRestocked: new Date("2024-09-05"),
    expiresAt: new Date("2026-09-05"),
    lowStockThreshold: 2,
  },
  {
    id: "10",
    name: "Whole Milk",
    category: "dairy",
    currentStock: 18,
    maxStock: 24,
    unit: "gallons",
    costPerUnit: 3.8,
    totalValue: 68.4,
    supplier: "Dairy Best Co.",
    lastRestocked: new Date("2024-09-13"),
    expiresAt: new Date("2024-09-20"),
    lowStockThreshold: 6,
  },
]

export const addInventoryItem = (item: InventoryItem) => {
  mockInventoryItems.push(item)
}

export const updateInventoryItem = (updatedItem: InventoryItem) => {
  const index = mockInventoryItems.findIndex((item) => item.id === updatedItem.id)
  if (index !== -1) {
    mockInventoryItems[index] = updatedItem
  }
}

export const deleteInventoryItem = (itemId: string) => {
  const index = mockInventoryItems.findIndex((item) => item.id === itemId)
  if (index !== -1) {
    mockInventoryItems.splice(index, 1)
  }
}

export const getNextInventoryItemId = () => {
  const maxId = Math.max(...mockInventoryItems.map((item) => Number.parseInt(item.id)), 0)
  return (maxId + 1).toString()
}

export const mockCustomers: Customer[] = [
  {
    id: "1",
    name: "Sarah Johnson",
    email: "sarah.j@email.com",
    phone: "+1 (555) 987-6543",
    totalVisits: 8,
    totalSpent: 421.50,
    lastVisit: new Date("2024-09-07"),
    loyaltyPoints: 840,
    preferences: ["Window seating", "Quiet atmosphere"],
    allergies: ["Nuts", "Shellfish"],
    notes: "Always orders the quinoa salad",
    createdAt: new Date("2024-01-15"),
  },
  {
    id: "2",
    name: "Michael Chen",
    email: "michael.chen@email.com",
    phone: "+1 (555) 123-4567",
    totalVisits: 12,
    totalSpent: 680.25,
    lastVisit: new Date("2024-09-13"),
    loyaltyPoints: 1360,
    preferences: ["Spicy food", "Craft beer"],
    allergies: [],
    notes: "Prefers table 12, regular customer",
    createdAt: new Date("2023-11-20"),
  },
  {
    id: "3",
    name: "Emily Rodriguez",
    email: "emily.rodriguez@email.com",
    phone: "+1 (555) 234-5678",
    totalVisits: 5,
    totalSpent: 285.75,
    lastVisit: new Date("2024-09-10"),
    loyaltyPoints: 570,
    preferences: ["Vegetarian options"],
    allergies: ["Dairy", "Gluten"],
    notes: "Birthday celebration next week",
    createdAt: new Date("2024-03-08"),
  },
  {
    id: "4",
    name: "David Thompson",
    email: "david.thompson@email.com",
    phone: "+1 (555) 345-6789",
    totalVisits: 15,
    totalSpent: 920.40,
    lastVisit: new Date("2024-09-12"),
    loyaltyPoints: 1840,
    preferences: ["Business meetings", "Wine pairings"],
    allergies: [],
    notes: "Corporate account, VIP customer",
    createdAt: new Date("2023-08-14"),
  },
  {
    id: "5",
    name: "Lisa Wang",
    email: "lisa.wang@email.com",
    phone: "+1 (555) 456-7890",
    totalVisits: 3,
    totalSpent: 165.80,
    lastVisit: new Date("2024-09-05"),
    loyaltyPoints: 330,
    preferences: ["Healthy options"],
    allergies: ["Seafood"],
    notes: "New customer, very satisfied",
    createdAt: new Date("2024-07-22"),
  },
  {
    id: "6",
    name: "James Wilson",
    email: "james.wilson@email.com",
    phone: "+1 (555) 567-8901",
    totalVisits: 9,
    totalSpent: 445.60,
    lastVisit: new Date("2024-09-11"),
    loyaltyPoints: 890,
    preferences: ["Steak", "Whiskey"],
    allergies: [],
    notes: "Anniversary dinner regular",
    createdAt: new Date("2024-02-10"),
  },
  {
    id: "7",
    name: "Maria Garcia",
    email: "maria.garcia@email.com",
    phone: "+1 (555) 678-9012",
    totalVisits: 6,
    totalSpent: 320.15,
    lastVisit: new Date("2024-09-08"),
    loyaltyPoints: 640,
    preferences: ["Family dining", "Kids menu"],
    allergies: ["Peanuts"],
    notes: "Family of 4, comes every Sunday",
    createdAt: new Date("2024-04-15"),
  },
  {
    id: "8",
    name: "Robert Kim",
    email: "robert.kim@email.com",
    phone: "+1 (555) 789-0123",
    totalVisits: 4,
    totalSpent: 195.30,
    lastVisit: new Date("2024-09-06"),
    loyaltyPoints: 390,
    preferences: ["Korean cuisine", "Hot tea"],
    allergies: ["Soy"],
    notes: "Prefers Korean dishes when available",
    createdAt: new Date("2024-05-20"),
  },
]

export const addCustomer = (customer: Customer) => {
  mockCustomers.push(customer)
}

export const updateCustomer = (updatedCustomer: Customer) => {
  const index = mockCustomers.findIndex((customer) => customer.id === updatedCustomer.id)
  if (index !== -1) {
    mockCustomers[index] = updatedCustomer
  }
}

export const deleteCustomer = (customerId: string) => {
  const index = mockCustomers.findIndex((customer) => customer.id === customerId)
  if (index !== -1) {
    mockCustomers.splice(index, 1)
  }
}

export const getNextCustomerId = () => {
  const maxId = Math.max(...mockCustomers.map((customer) => Number.parseInt(customer.id)), 0)
  return (maxId + 1).toString()
}

// Enhanced Member Management Data
export const mockMemberRoles: MemberRole[] = [
  {
    id: "1",
    name: "Manager",
    description: "Full access to all restaurant operations and staff management",
    permissions: ["all"],
    level: 5,
    color: "#8B5CF6",
    isActive: true,
  },
  {
    id: "2",
    name: "Shift Supervisor",
    description: "Oversee daily operations and manage staff during shifts",
    permissions: ["view_orders", "update_orders", "manage_tables", "staff_management", "view_analytics"],
    level: 4,
    color: "#3B82F6",
    isActive: true,
  },
  {
    id: "3",
    name: "Senior Server",
    description: "Experienced server with additional responsibilities",
    permissions: ["view_orders", "update_orders", "view_tables", "customer_service", "wine_service"],
    level: 3,
    color: "#10B981",
    isActive: true,
  },
  {
    id: "4",
    name: "Server",
    description: "Standard server role with basic order management",
    permissions: ["view_orders", "update_orders", "view_tables", "customer_service"],
    level: 2,
    color: "#F59E0B",
    isActive: true,
  },
  {
    id: "5",
    name: "Host/Hostess",
    description: "Manage reservations and greet customers",
    permissions: ["view_tables", "manage_reservations", "customer_service"],
    level: 1,
    color: "#EF4444",
    isActive: true,
  },
]

export const mockMemberShifts: MemberShift[] = [
  {
    id: "1",
    memberId: "4",
    date: new Date("2024-09-14"),
    startTime: "11:00",
    endTime: "19:00",
    breakDuration: 30,
    status: "scheduled",
    notes: "Regular shift",
  },
  {
    id: "2",
    memberId: "5",
    date: new Date("2024-09-14"),
    startTime: "16:00",
    endTime: "24:00",
    breakDuration: 30,
    status: "in-progress",
    actualStartTime: "15:55",
    notes: "Covering for sick colleague",
  },
  {
    id: "3",
    memberId: "6",
    date: new Date("2024-09-14"),
    startTime: "17:00",
    endTime: "23:00",
    breakDuration: 30,
    status: "cancelled",
    notes: "Called in sick",
  },
]

export const mockMemberPerformance: MemberPerformance[] = [
  {
    id: "1",
    memberId: "4",
    period: "monthly",
    date: new Date("2024-09-01"),
    ordersHandled: 156,
    customerSatisfaction: 4.6,
    efficiency: 92,
    attendance: 95,
    punctuality: 88,
    teamwork: 94,
    communication: 91,
    overallScore: 4.2,
    notes: "Excellent performance this month, great customer feedback",
  },
  {
    id: "2",
    memberId: "5",
    period: "monthly",
    date: new Date("2024-09-01"),
    ordersHandled: 203,
    customerSatisfaction: 4.8,
    efficiency: 96,
    attendance: 98,
    punctuality: 95,
    teamwork: 97,
    communication: 94,
    overallScore: 4.7,
    notes: "Outstanding performance, ready for promotion consideration",
  },
  {
    id: "3",
    memberId: "6",
    period: "monthly",
    date: new Date("2024-09-01"),
    ordersHandled: 0,
    customerSatisfaction: 4.4,
    efficiency: 85,
    attendance: 92,
    punctuality: 78,
    teamwork: 89,
    communication: 87,
    overallScore: 4.0,
    notes: "Good performance but needs improvement in punctuality",
  },
]

export const mockMemberNotifications: MemberNotification[] = [
  {
    id: "1",
    memberId: "4",
    title: "Shift Reminder",
    message: "Your shift starts in 30 minutes. Please arrive on time.",
    type: "info",
    isRead: false,
    createdAt: new Date("2024-09-14T10:30:00"),
    expiresAt: new Date("2024-09-14T11:00:00"),
  },
  {
    id: "2",
    memberId: "5",
    title: "Performance Review",
    message: "Your monthly performance review is scheduled for next week.",
    type: "info",
    isRead: true,
    createdAt: new Date("2024-09-13T14:00:00"),
    actionUrl: "/member/performance",
  },
  {
    id: "3",
    memberId: "6",
    title: "Training Required",
    message: "Please complete the new customer service training module.",
    type: "warning",
    isRead: false,
    createdAt: new Date("2024-09-12T09:00:00"),
    actionUrl: "/member/training",
  },
]

export type { User, MenuItem, Order, Table, OrderItem, Staff, InventoryItem, Customer, MemberRole, MemberShift, MemberPerformance, MemberNotification }
