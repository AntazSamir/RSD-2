[
  {
    "id": "TC001",
    "title": "User Sign-Up with Email",
    "description": "Verify that a new user can successfully sign up using valid email and password credentials.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to the sign-up page."
      },
      {
        "type": "action",
        "description": "Enter a valid email address."
      },
      {
        "type": "action",
        "description": "Enter a valid password following password policy."
      },
      {
        "type": "action",
        "description": "Submit the sign-up form."
      },
      {
        "type": "assertion",
        "description": "Confirm that the user is registered and redirected to the dashboard."
      }
    ]
  },
  {
    "id": "TC002",
    "title": "User Sign-In with Email and Password",
    "description": "Verify that an existing user can successfully sign in using valid email and password.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to the sign-in page."
      },
      {
        "type": "action",
        "description": "Input registered email and correct password."
      },
      {
        "type": "action",
        "description": "Click the sign-in button."
      },
      {
        "type": "assertion",
        "description": "Verify successful login and navigation to the main dashboard."
      }
    ]
  },
  {
    "id": "TC003",
    "title": "User Sign-In Failure with Incorrect Password",
    "description": "Ensure that sign-in fails with a proper error message when the password is incorrect.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to the sign-in page."
      },
      {
        "type": "action",
        "description": "Input registered email with an invalid password."
      },
      {
        "type": "action",
        "description": "Click the sign-in button."
      },
      {
        "type": "assertion",
        "description": "Check that an error message is displayed indicating invalid credentials."
      }
    ]
  },
  {
    "id": "TC004",
    "title": "User Password Reset Flow",
    "description": "Verify that a user can successfully request and complete a password reset.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to the password reset page."
      },
      {
        "type": "action",
        "description": "Enter registered email to receive password reset instructions."
      },
      {
        "type": "action",
        "description": "Submit the password reset request."
      },
      {
        "type": "assertion",
        "description": "Verify that a password reset email is sent via Brevo SMTP."
      },
      {
        "type": "action",
        "description": "Follow link in the email and set a new password."
      },
      {
        "type": "assertion",
        "description": "Confirm password is updated and login succeeds with the new password."
      }
    ]
  },
  {
    "id": "TC005",
    "title": "User Sign-In via Google OAuth",
    "description": "Verify that users can authenticate successfully using Google OAuth login.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to the sign-in page."
      },
      {
        "type": "action",
        "description": "Click on the Google OAuth login button."
      },
      {
        "type": "action",
        "description": "Complete OAuth flow with valid Google credentials."
      },
      {
        "type": "assertion",
        "description": "Verify that user is logged in and redirected to the dashboard."
      }
    ]
  },
  {
    "id": "TC006",
    "title": "Session Persistence Across Reloads",
    "description": "Verify user sessions persist across page reloads and navigation without requiring re-login.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Sign in with valid credentials."
      },
      {
        "type": "action",
        "description": "Refresh the web page."
      },
      {
        "type": "assertion",
        "description": "Confirm the user remains logged in and on the same dashboard page."
      },
      {
        "type": "action",
        "description": "Navigate between different sections (orders, reservations, menu, inventory)."
      },
      {
        "type": "assertion",
        "description": "Ensure user session persists and no login prompt appears."
      }
    ]
  },
  {
    "id": "TC007",
    "title": "Create New Order with Valid Data",
    "description": "Verify the creation of a new restaurant order with all required details succeeds and updates in real-time.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to the orders section."
      },
      {
        "type": "action",
        "description": "Open the new order dialog."
      },
      {
        "type": "action",
        "description": "Input valid order details including customer, items, and quantities."
      },
      {
        "type": "action",
        "description": "Submit the new order."
      },
      {
        "type": "assertion",
        "description": "Check the order appears immediately in the orders table."
      },
      {
        "type": "assertion",
        "description": "Verify order data syncs correctly in the backend (Supabase)."
      }
    ]
  },
  {
    "id": "TC008",
    "title": "Edit Existing Order",
    "description": "Verify that editing an existing order updates the order details and reflects changes in real-time.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to the orders section."
      },
      {
        "type": "action",
        "description": "Select an existing order and open the edit order dialog."
      },
      {
        "type": "action",
        "description": "Modify order details such as item quantity and special notes."
      },
      {
        "type": "action",
        "description": "Save changes."
      },
      {
        "type": "assertion",
        "description": "Confirm that updates are reflected immediately in the orders table."
      },
      {
        "type": "assertion",
        "description": "Verify backend data consistency with updated order information."
      }
    ]
  },
  {
    "id": "TC009",
    "title": "Order Tracking - Status Update",
    "description": "Ensure that order statuses can be updated and status changes are broadcasted in real-time to the UI.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to the orders section."
      },
      {
        "type": "action",
        "description": "Update the status of an existing order (e.g., from 'Pending' to 'In Progress')."
      },
      {
        "type": "assertion",
        "description": "Check the updated status is immediately visible in the orders listing."
      },
      {
        "type": "assertion",
        "description": "Validate status change notifications are sent if applicable."
      }
    ]
  },
  {
    "id": "TC010",
    "title": "Create Table Reservation",
    "description": "Verify that a customer can successfully make a table reservation and confirmation email is sent.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to the table reservation section."
      },
      {
        "type": "action",
        "description": "Input valid reservation details (date, time, number of guests, contact info)."
      },
      {
        "type": "action",
        "description": "Submit reservation."
      },
      {
        "type": "assertion",
        "description": "Check reservation appears on the managerâ€™s reservation dashboard."
      },
      {
        "type": "assertion",
        "description": "Verify confirmation email is sent to the customer using Brevo SMTP."
      }
    ]
  },
  {
    "id": "TC011",
    "title": "Handle Reservation Scheduling Conflict",
    "description": "Ensure that conflicting table reservations are detected and appropriate errors are shown.",
    "category": "error handling",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Attempt to create a reservation for a table already booked for the requested time slot."
      },
      {
        "type": "assertion",
        "description": "Verify that the system prevents double booking and displays an informative error message."
      }
    ]
  },
  {
    "id": "TC012",
    "title": "Add Menu Item",
    "description": "Verify that a manager can add a new menu item including inventory linkage successfully.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to the menu management section."
      },
      {
        "type": "action",
        "description": "Open add menu item dialog."
      },
      {
        "type": "action",
        "description": "Enter valid menu item details (name, description, price, linked inventory items)."
      },
      {
        "type": "action",
        "description": "Submit the new menu item."
      },
      {
        "type": "assertion",
        "description": "Confirm new menu item appears in the menu listing."
      }
    ]
  },
  {
    "id": "TC013",
    "title": "Edit Menu Item",
    "description": "Verify changes to existing menu items update correctly and reflect in inventory.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to the menu management section."
      },
      {
        "type": "action",
        "description": "Select a menu item and open the edit dialog."
      },
      {
        "type": "action",
        "description": "Make changes to item details and save."
      },
      {
        "type": "assertion",
        "description": "Check that updates reflect immediately in the menu listing."
      },
      {
        "type": "assertion",
        "description": "Verify inventory linkage remains consistent."
      }
    ]
  },
  {
    "id": "TC014",
    "title": "Inventory Stock Management",
    "description": "Verify that inventory items can be added, edited, and stock quantities updated accurately.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to inventory management."
      },
      {
        "type": "action",
        "description": "Add a new inventory item with valid details."
      },
      {
        "type": "assertion",
        "description": "Confirm the inventory item is listed with correct details."
      },
      {
        "type": "action",
        "description": "Edit an existing inventory item to update stock quantity."
      },
      {
        "type": "assertion",
        "description": "Verify the updated stock count is reflected immediately."
      }
    ]
  },
  {
    "id": "TC015",
    "title": "Maintain Customer Profiles",
    "description": "Verify that customer profiles can be viewed, edited, and interaction histories maintained correctly.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to the customer management section."
      },
      {
        "type": "action",
        "description": "Select a customer profile to view details."
      },
      {
        "type": "assertion",
        "description": "Check customer information and interaction history are displayed correctly."
      },
      {
        "type": "action",
        "description": "Edit customer data and save."
      },
      {
        "type": "assertion",
        "description": "Confirm changes persist and reflected in profile view."
      }
    ]
  },
  {
    "id": "TC016",
    "title": "Staff Scheduling and Role Assignment",
    "description": "Verify that staff member details and scheduling can be created, edited, and saved properly.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to staff management."
      },
      {
        "type": "action",
        "description": "Add new staff member with role and schedule."
      },
      {
        "type": "assertion",
        "description": "Verify new staff member appears in the staff list with correct role and schedule."
      },
      {
        "type": "action",
        "description": "Edit existing staff memberâ€™s role and schedule."
      },
      {
        "type": "assertion",
        "description": "Confirm that edits save and update the staff details listing."
      }
    ]
  },
  {
    "id": "TC017",
    "title": "Dashboard Analytics Display",
    "description": "Verify that analytics components load correctly and display accurate KPIs and reports on page load.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Sign in and navigate to the main dashboard."
      },
      {
        "type": "assertion",
        "description": "Check that all analytics widgets load without error."
      },
      {
        "type": "assertion",
        "description": "Verify that key performance indicators display accurate data consistent with backend."
      }
    ]
  },
  {
    "id": "TC018",
    "title": "Email Notification on Reservation Confirmation",
    "description": "Verify that reservation confirmation emails are reliably sent to customers and staff.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Create a new reservation."
      },
      {
        "type": "assertion",
        "description": "Verify that confirmation emails are sent to customer via Brevo SMTP."
      },
      {
        "type": "assertion",
        "description": "Check that staff receives notification email if configured."
      }
    ]
  },
  {
    "id": "TC019",
    "title": "Email Notification on Order Updates",
    "description": "Ensure order update notifications are sent to related customers and staff promptly.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Modify an existing order status."
      },
      {
        "type": "assertion",
        "description": "Confirm that email notifications are sent accordingly via Brevo SMTP."
      }
    ]
  },
  {
    "id": "TC020",
    "title": "UI Accessibility and Responsiveness",
    "description": "Verify that all UI components render correctly across desktop and mobile devices and meet accessibility standards.",
    "category": "ui",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Access the dashboard and various management sections on desktop and mobile viewport sizes."
      },
      {
        "type": "assertion",
        "description": "Check that all UI elements render correctly with no overlap or clipping."
      },
      {
        "type": "assertion",
        "description": "Verify keyboard navigation and screen reader compatibility for interactive components."
      }
    ]
  },
  {
    "id": "TC021",
    "title": "API Performance Under Load",
    "description": "Validate that API endpoints for authentication and email services respond within acceptable performance limits under load.",
    "category": "performance",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Simulate multiple concurrent sign-in and email request calls."
      },
      {
        "type": "assertion",
        "description": "Monitor API response times and confirm they meet defined thresholds."
      }
    ]
  },
  {
    "id": "TC022",
    "title": "Error Handling on Network Failures",
    "description": "Verify the system handles network failures gracefully with appropriate user feedback during operations like sign-in, order updating, and email sending.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Simulate network failure during sign-in."
      },
      {
        "type": "assertion",
        "description": "Check that a user-friendly error message appears and no app crash occurs."
      },
      {
        "type": "action",
        "description": "Simulate network failure when submitting a new order."
      },
      {
        "type": "assertion",
        "description": "Verify order submission fails gracefully with retry or error message."
      },
      {
        "type": "action",
        "description": "Simulate network failure when sending an email notification."
      },
      {
        "type": "assertion",
        "description": "Confirm error handling does not block UI and logs the failure."
      }
    ]
  },
  {
    "id": "TC023",
    "title": "Logout and Session Termination",
    "description": "Verify that users can successfully log out and the session is terminated securely.",
    "category": "security",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Sign in with valid credentials."
      },
      {
        "type": "action",
        "description": "Click the logout button."
      },
      {
        "type": "assertion",
        "description": "Confirm user is redirected to the sign-in page."
      },
      {
        "type": "action",
        "description": "Attempt to reload dashboard page."
      },
      {
        "type": "assertion",
        "description": "Verify that user is not authenticated and prompted to log in."
      }
    ]
  }
]
